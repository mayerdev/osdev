(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{365:function(_,v,t){"use strict";t.r(v);var r=t(45),s=Object(r.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"bios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bios"}},[_._v("#")]),_._v(" BIOS")]),_._v(" "),t("h2",{attrs:{id:"основная-информация"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#основная-информация"}},[_._v("#")]),_._v(" Основная информация")]),_._v(" "),t("p",[_._v("BIOS (Базовая система ввода-вывода) была создана для предоставления общих низкоуровневых функций ранним программистам компьютерных систем. Основными целями были: скрыть (насколько это возможно) различия в моделях ПК и аппаратном обеспечении от ОС и приложений, а также упростить разработку ОС и приложений (поскольку службы BIOS обрабатывали большую часть интерфейса аппаратного уровня).")]),_._v(" "),t("p",[_._v('Эти службы BIOS все еще используются (особенно во время загрузки) и часто называются "функциями BIOS". В Real mode к ним можно легко получить доступ с помощью программных прерываний, используя язык ассемблер.')]),_._v(" "),t("h2",{attrs:{id:"функции-bios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#функции-bios"}},[_._v("#")]),_._v(" Функции BIOS")]),_._v(" "),t("p",[_._v('Чтобы получить доступ к функции BIOS, вы обычно устанавливаете регистр процессора AH (или AX, или EAX) на определенное значение, а затем выполняете код операции INT. Значение в AH (или AX, или EAX) в сочетании с конкретным номером прерывания, выбранным для конкретной функции BIOS. (Другие регистры процессора содержат любые "аргументы" функции, а также часто возвращаемые значения функции.)')]),_._v(" "),t("p",[_._v("Проще всего создать список функций BIOS, указав номер прерывания и значение AH (или AX, или EAX), которое выбирает функцию. Также проще всего ссылаться на конкретные функции BIOS таким образом в обсуждениях. Например, INT 0x13, AH=0 - это функция BIOS, которая сбрасывает жесткие диски или дискеты.")]),_._v(" "),t("p",[_._v("Примечание: значения INT и AH всегда указаны в шестнадцатеричной системе счисления. Случайное использование десятичного значения в коде операции INT является очень распространенным источником ошибок при использовании функций BIOS.")]),_._v(" "),t("p",[_._v("В какой-то степени функции BIOS организованы по номеру прерывания:")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("INT 0x10")]),_._v(" = Функции отображения видео (включая VESA/VBE)")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13")]),_._v(" = доступ к хранилищу данных (жёсткие диски, дискеты)")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15")]),_._v(" = функции размера памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x16")]),_._v(" = функции клавиатуры")])]),_._v(" "),t("p",[_._v("Исчерпывающий список функций BIOS доступен в RBIL.")]),_._v(" "),t("p",[_._v('К сожалению, индустрия ПК никогда не была хороша в поддержании стандартов. Таким образом, каждый производитель ПК и каждый производитель BIOS случайным образом создавали новые функции BIOS. Также можно "зацепить" любое из этих прерываний и вставить дополнительные функции, имитирующие функции BIOS. Ранние производители оборудования и программного обеспечения для ПК часто делали это. Таким образом, в итоге появились буквально тысячи функций BIOS (или имитаций). Список RBIL огромен и в основном заполнен функциями, которые работают только в сочетании с каким-либо полностью устаревшим компьютером, BIOS, аппаратным или программным обеспечением.')]),_._v(" "),t("h3",{attrs:{id:"основные-функции"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#основные-функции"}},[_._v("#")]),_._v(" Основные функции")]),_._v(" "),t("p",[_._v('К сожалению, RBIL четко не указывает, какие функции BIOS являются "общими" (в некотором смысле). То есть те, которые всегда доступны и которыми пользуются все. Частично это связано с тем, что "стандартные" функции BIOS росли с течением времени, поэтому, если вы вернетесь достаточно далеко назад, вы обычно можете найти компьютер, который не поддерживает почти никаких конкретных функций BIOS.')]),_._v(" "),t("p",[_._v("Но определенно есть набор, который обычно используется в большинстве современных ОС.")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("INT 0x10, AH = 1")]),_._v(" -- установить курсор")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 3")]),_._v(" -- позиция курсора")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0xE")]),_._v(" -- отобразить символ")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0xF")]),_._v(" -- получить страницу видео и режим")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0x11")]),_._v(" -- установить шрифт 8x8")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0x12")]),_._v(" -- определить EGA/VGA")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0x13")]),_._v(" -- отобразить строку")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0x1200")]),_._v(" -- альтернативный экран ввода")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AH = 0x1201")]),_._v(" -- отключить эмуляцию курсора")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AX = 0x4F00")]),_._v(" -- размер видеопамяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AX = 0x4F01")]),_._v(" -- VESA получить информацию о режиме")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AX = 0x4F02")]),_._v(" -- выбрать видеорежимы VESA")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x10, AX = 0x4F0A")]),_._v(" -- VESA 2.0 интерфейс защищённого режима")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x11")]),_._v(" -- определение железа")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 0")]),_._v(" -- сброс дискеты/жёсткого диска")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 2")]),_._v(" -- чтение дискеты/жёсткого диска в режиме CHS")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 3")]),_._v(" -- записать на дискету/жёсткий диск в режиме CHS")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 0x15")]),_._v(" -- определить второй диск")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 0x41")]),_._v(" -- проверьте наличие расширений INT 13")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 0x42")]),_._v(" -- чтение жесткого диска в режиме LBA")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x13, AH = 0x43")]),_._v(" -- запись на жесткий диск в режиме LBA")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x12")]),_._v(" -- получите низкий объем памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, EAX = 0xE820")]),_._v(" -- получить полную карту памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AX = 0xE801")]),_._v(" -- получить непрерывный размер памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AX = 0xE881")]),_._v(" -- получить непрерывный размер памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AH = 0x88")]),_._v(" -- получить непрерывный размер памяти")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AH = 0xC0")]),_._v(" -- обнаружение шины MCA")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AX = 0x0530")]),_._v(" -- обнаружение APM BIOS")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AH = 0x5300")]),_._v(" -- обнаружение APM")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AX = 0x5303")]),_._v(" -- подключение APM с использованием 32-бит")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x15, AX = 0x5304")]),_._v(" -- отключение APM")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x16, AH = 0")]),_._v(" -- считывание кода клавиатуры (с блокировкой)")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x16, AH = 1")]),_._v(" -- считывание кода клавиатуры (без блокировки)")]),_._v(" "),t("li",[t("strong",[_._v("INT 0x16, AH = 3")]),_._v(" -- частота повторения кода клавиатуры")])]),_._v(" "),t("h3",{attrs:{id:"заметки-asm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#заметки-asm"}},[_._v("#")]),_._v(" Заметки ASM")]),_._v(" "),t("p",[_._v('Каждая функция BIOS (как описано в RBIL) имеет определенный набор регистров "результата". Помимо перечисленных регистров, функции BIOS должны идеально сохранять все остальные значения регистров. Ранние версии Bochs (ниже 2.3) имели небольшую проблему с этим. Нижние половины всех 32-битных расширенных регистров (т.е. EBX, ECX) были сохранены должным образом, но верхние слова некоторых регистров были уничтожены.')]),_._v(" "),t("p",[_._v("Сами функции BIOS никогда не должны сбоить. При любой ошибке они будут:")]),_._v(" "),t("ul",[t("li",[_._v("почти всегда устанавливать флаг переноса (тест с помощью JC),")]),_._v(" "),t("li",[_._v('иногда возвращать "ah = 0x86 (неподдерживаемая функция)",')]),_._v(" "),t("li",[_._v('иногда возвращать "ah = 0x80 (недопустимая команда)"')]),_._v(" "),t("li",[_._v("или (у серьёзно глючных BIOS) возвращать ничего.")])]),_._v(" "),t("p",[_._v("Старайтесь всегда проверять эти возвращаемые ошибки, потому что во многих случаях функции BIOS могут возвращать действительные (но очень неправильные) данные, а не код ошибки.")]),_._v(" "),t("h2",{attrs:{id:"bios-в-защищенном-режиме-protected-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bios-в-защищенном-режиме-protected-mode"}},[_._v("#")]),_._v(" BIOS в защищённом режиме (Protected Mode)")]),_._v(" "),t("p",[_._v("К сожалению, в защищенном режиме почти все функции BIOS становятся недоступными, и попытка вызвать их, тем не менее, приведет к исключениям или неправильным ответам (из-за другого способа обработки значений сегментов). Однако некоторые новые сервисы (такие как SMBIOS, PCI, PnP или VBE) предлагают интерфейс, совместимый с 32-битным защищенным режимом.")]),_._v(" "),t("p",[_._v("Если вам необходимо использовать функции BIOS в Real Mode после переключения процессора в защищенный режим, см. раздел Virtual 8086 Mode или, возможно, выйдите из Защищенного режима и на мгновение вернитесь в Real Mode. Оба метода имеют серьезные проблемы, и поэтому любые вызовы BIOS должны выполняться до того, как какое-либо физическое устройство будет запрограммировано вашим кодом:")]),_._v(" "),t("ul",[t("li",[_._v("Вызовы BIOS могут использовать прерывания, что означает, что вам необходимо перенаправить IRQ или сопоставить PIC обратно в исходную конфигурацию.")]),_._v(" "),t("li",[_._v("Вызовы BIOS могут обращаться к устройствам, которые вы уже настроили - в частности, вызовы PIT и PIC")]),_._v(" "),t("li",[_._v("BIOS могут самостоятельно входить в защищенный режим для доступа к регистрам MMIO, что выходит за рамки Virtual 8086 Mode.")]),_._v(" "),t("li",[_._v("В реальном режиме (Real Mode) у вас нет возможности управлять прерываниями, и ваши драйверы могут застрять из-за потери прерываний.")]),_._v(" "),t("li",[_._v("В реальном режиме вы не контролируете время, производительность и гарантии безопасности.")])]),_._v(" "),t("p",[_._v("Единственное устройство, которое в основном освобождено от этих проблем, - это видеокарта BIOS, которая обычно не входит в комплект вашей материнской платы и поэтому также не может полагаться на службы BIOS. Большинство современных операционных систем - как коммерческих, так и любительских - используют монитор или эмулятор v8086 для поддержки графических устройств без встроенного драйвера.")]),_._v(" "),t("h2",{attrs:{id:"bios-в-длинном-режиме-long-mode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bios-в-длинном-режиме-long-mode"}},[_._v("#")]),_._v(" BIOS в длинном режиме (Long Mode)")]),_._v(" "),t("p",[_._v("Как и в защищенном режиме, функции BIOS недоступны и в длительном режиме. К сожалению, нет виртуального режима 8086 (Virtual 8086 Mode), который пришел бы на помощь. Необходимо на мгновение переключиться в реальный режим или эмулировать процессор и интерпретировать коды операций с помощью программного обеспечения. Всю необходимую информацию для последнего подхода можно найти в документации Intel и AMD.")]),_._v(" "),t("h2",{attrs:{id:"дополнительная-информация-из-bios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#дополнительная-информация-из-bios"}},[_._v("#")]),_._v(" Дополнительная информация из BIOS")]),_._v(" "),t("p",[_._v("Большая часть полезной информации, которую вы получите из BIOS, будет получена при вызове функций BIOS. Однако существует небольшое количество дополнительной информации, которую можно получить.")]),_._v(" "),t("p",[_._v("Некоторые результаты обнаружения/состояния BIOS хранятся в области данных BIOS.")]),_._v(" "),t("p",[_._v("Дополнительная информация хранится в CMOS-чипе.")]),_._v(" "),t("h2",{attrs:{id:"внешние-ссылки"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#внешние-ссылки"}},[_._v("#")]),_._v(" Внешние ссылки")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://ru.wikipedia.org/wiki/BIOS",target:"_blank",rel:"noopener noreferrer"}},[_._v("BIOS на Википедии"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"http://www.ctyme.com/intr/int.htm",target:"_blank",rel:"noopener noreferrer"}},[_._v("http://www.ctyme.com/intr/int.htm"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=s.exports}}]);